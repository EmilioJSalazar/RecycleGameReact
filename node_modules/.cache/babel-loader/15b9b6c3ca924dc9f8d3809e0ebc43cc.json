{"ast":null,"code":"import _slicedToArray from \"D:\\\\UDLA\\\\UDLA 7\\xB0 SEMESTRE\\\\INGENIERIA WEB\\\\ReactGame\\\\recycling-game\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\UDLA\\\\UDLA 7\\xB0 SEMESTRE\\\\INGENIERIA WEB\\\\ReactGame\\\\recycling-game\\\\src\\\\components\\\\ResultScreen\\\\ResultScreen.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport badges from \"../../utils/badgeData\";\nimport ProgressScore from \"../GameScreen/ProgressScore\";\nimport Button from \"../Button\";\nimport FunFactsModal from \"../LandingScreen/FunFacts\";\nimport { Container, MessageBox, BadgeBox, BoxMessage, MessageImage, PageHeader } from \"../MasterCss\";\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 90vw;\n  padding-left: 25px;\n  padding-right: 25px;\n  padding-bottom: 25px;\n`;\n\nconst ResultScreen = props => {\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        badgeGiven = _React$useState2[0],\n        setBadgeGiven = _React$useState2[1];\n\n  React.useEffect(() => {\n    if (props.count === 1) {\n      setBadgeGiven(4);\n    } else if (props.count >= 5 && props.count < 11) {\n      setBadgeGiven(1);\n    } else if (props.count >= 10 && props.count < 16) {\n      setBadgeGiven(2);\n    } else if (props.count >= 15) {\n      setBadgeGiven(3);\n    }\n  }, [props.count, badgeGiven]);\n  const history = useHistory();\n\n  const restartGame = () => {\n    props.setCount(0);\n    props.setBadCount(0);\n    history.push(\"/game\");\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(PageHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"nice one!\"), React.createElement(ProgressScore, {\n    results: true,\n    count: props.count,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(BadgeBox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \" \", React.createElement(MessageImage, {\n    src: badges[badgeGiven].src,\n    alt: \"An animal badge to say well done!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(MessageBox, {\n    results: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(BoxMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, props.count, badges[badgeGiven].message))), React.createElement(ButtonContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, props.funFactsModal && React.createElement(FunFactsModal, {\n    handleClose: props.hideFunFactsModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Button, {\n    label: \"learn more\",\n    handleClick: props.showFunFactsModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, props.label), React.createElement(Button, {\n    primary: true,\n    label: \"Play again\",\n    handleClick: restartGame,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, props.label)));\n};\n\nexport default ResultScreen;","map":{"version":3,"sources":["D:/UDLA/UDLA 7Â° SEMESTRE/INGENIERIA WEB/ReactGame/recycling-game/src/components/ResultScreen/ResultScreen.js"],"names":["React","styled","useHistory","badges","ProgressScore","Button","FunFactsModal","Container","MessageBox","BadgeBox","BoxMessage","MessageImage","PageHeader","ButtonContainer","div","ResultScreen","props","useState","badgeGiven","setBadgeGiven","useEffect","count","history","restartGame","setCount","setBadCount","push","src","message","funFactsModal","hideFunFactsModal","showFunFactsModal","label"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport badges from \"../../utils/badgeData\";\r\nimport ProgressScore from \"../GameScreen/ProgressScore\";\r\nimport Button from \"../Button\";\r\n\r\nimport FunFactsModal from \"../LandingScreen/FunFacts\";\r\n\r\nimport {\r\n  Container,\r\n  MessageBox,\r\n  BadgeBox,\r\n  BoxMessage,\r\n  MessageImage,\r\n  PageHeader\r\n} from \"../MasterCss\";\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  width: 90vw;\r\n  padding-left: 25px;\r\n  padding-right: 25px;\r\n  padding-bottom: 25px;\r\n`;\r\n\r\nconst ResultScreen = props => {\r\n  const [badgeGiven, setBadgeGiven] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    if (props.count === 1) {\r\n      setBadgeGiven(4)\r\n    } else if (props.count >= 5 && props.count < 11) {\r\n      setBadgeGiven(1);\r\n    } else if (props.count >= 10 && props.count < 16) {\r\n      setBadgeGiven(2);\r\n    } else if (props.count >= 15) {\r\n      setBadgeGiven(3);\r\n    }\r\n  }, [props.count, badgeGiven]);\r\n\r\n  const history = useHistory();\r\n\r\n  const restartGame = () => {\r\n    props.setCount(0);\r\n    props.setBadCount(0);\r\n    history.push(\"/game\");\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <PageHeader>nice one!</PageHeader>\r\n      <ProgressScore results count={props.count} />\r\n      <BadgeBox>\r\n        {\" \"}\r\n        <MessageImage\r\n          src={badges[badgeGiven].src}\r\n          alt=\"An animal badge to say well done!\"\r\n        />\r\n        <MessageBox results>\r\n          <BoxMessage>{props.count}{badges[badgeGiven].message}</BoxMessage>\r\n        </MessageBox>\r\n      </BadgeBox>\r\n      <ButtonContainer>\r\n        {props.funFactsModal && (\r\n          <FunFactsModal handleClose={props.hideFunFactsModal}></FunFactsModal>\r\n        )}\r\n        <Button label=\"learn more\" handleClick={props.showFunFactsModal}>\r\n          {props.label}\r\n        </Button>\r\n\r\n        <Button primary label=\"Play again\" handleClick={restartGame}>\r\n          {props.label}\r\n        </Button>\r\n      </ButtonContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ResultScreen;\r\n"]},"metadata":{},"sourceType":"module"}